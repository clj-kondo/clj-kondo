# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1
jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.10.3.855.sh
            chmod +x linux-install-1.10.3.855.sh
            sudo ./linux-install-1.10.3.855.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Run JVM tests
          command: |
            script/test
            script/analysis-test
            clojure -M:test:eastwood
      - run:
          name: Run as tools.deps dependency
          command: |
            .circleci/script/tools.deps
      - run:
          name: Run as lein command
          command: |
            .circleci/script/lein
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

  linux:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.0.0.2
      CLJ_KONDO_PLATFORM: linux # used in release script
      CLJ_KONDO_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
            chmod +x linux-install-1.10.2.796.sh
            sudo ./linux-install-1.10.2.796.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.0.0.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.0.0.2/graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.0.0.2
          key: linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-static:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.6-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.0.0.2
      CLJ_KONDO_PLATFORM: linux-static # used in release script
      CLJ_KONDO_TEST_ENV: native
      CLJ_KONDO_STATIC: true
      CLJ_KONDO_MUSL: true
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      # - run:
      #     name: "Short circuit on SNAPSHOT"
      #     command: |
      #       VERSION=$(cat resources/CLJ_KONDO_VERSION)
      #       if [[ "$VERSION" == *-SNAPSHOT ]]
      #       then
      #         circleci task halt
      #       fi
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
            chmod +x linux-install-1.10.2.796.sh
            sudo ./linux-install-1.10.2.796.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
            sudo -E script/setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.0.0.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.0.0.2/graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-22.0.0.2.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.0.0.2
          key: linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "12.0.0"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.0.0.2/Contents/Home
      CLJ_KONDO_PLATFORM: macos # used in release script
      CLJ_KONDO_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - run:
          name: Short circuit on non-master branches
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" ] && [ "$CIRCLE_BRANCH" = "master" ]
              then
                exit 0
              else
               circleci task halt
            fi
      - restore_cache:
          keys:
            - mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install Leiningen
          command: |
            .circleci/script/install-leiningen

      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java11-22.0.0.2 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.0.0.2/graalvm-ce-java11-darwin-amd64-22.0.0.2.tar.gz
              tar xzf graalvm-ce-java11-darwin-amd64-22.0.0.2.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.0.0.2
          key: mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: circleci/clojure:lein-2.8.1
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "deps.edn" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
  docker:
    docker:
      - image: circleci/buildpack-deps:stretch
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - attach_workspace:
          at: /tmp
      - setup_remote_docker:
          version: 19.03.12
      - run:
          name: Build Docker image
          command: .circleci/script/docker

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - linux
      - linux-static
      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - linux
      - docker:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - linux
            - linux-static
