# Clojure CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-clojure/ for more details
#
version: 2.1

commands:
  setup-docker-buildx:
    steps:
    - run:
        name: Create multi-platform capabale buildx builder
        command: |-
          docker run --privileged --rm tonistiigi/binfmt --install all
          docker buildx create --name ci-builder --use

jobs:
  jvm:
    docker:
      # specify the version you desire here
      - image: cimg/clojure@sha256:8298383d7753a2305663403871c31f238c3c5f0200e13f2394e32d4598a9fdf2
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "deps.edn" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies
      - run:
          name: Install Clojure
          command: |
            wget -nc https://download.clojure.org/install/linux-install-1.11.1.1165.sh
            chmod +x linux-install-1.11.1.1165.sh
            sudo ./linux-install-1.11.1.1165.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Run JVM tests
          command: |
            script/test
            script/analysis-test
            clojure -M:test:eastwood
      - run:
          name: Run as tools.deps dependency
          command: |
            .circleci/script/tools.deps
      - run:
          name: Run as lein command
          command: |
            .circleci/script/lein
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}

  linux:
    docker:
      - image: cimg/clojure@sha256:8298383d7753a2305663403871c31f238c3c5f0200e13f2394e32d4598a9fdf2 # fix for #1909
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      CLJ_KONDO_PLATFORM: linux # used in release script
      CLJ_KONDO_ARCH: amd64 # used in release script
      CLJ_KONDO_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Check max glibc version
          command: script/check_glibc.sh
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
            - linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.11.1.1165.sh
            chmod +x linux-install-1.11.1.1165.sh
            sudo ./linux-install-1.11.1.1165.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install gcc g++ zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.3.0
          key: linux-amd64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-aarch64:
    machine:
      enabled: true
      image: ubuntu-2004:current
    resource_class: arm.medium
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      CLJ_KONDO_PLATFORM: linux # used in release script
      CLJ_KONDO_ARCH: aarch64 # used in release script
      CLJ_KONDO_STATIC: "true"
      CLJ_KONDO_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Check max glibc version
          command: script/check_glibc.sh
      - restore_cache:
          keys:
            - linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.11.1.1165.sh
            chmod +x linux-install-1.11.1.1165.sh
            sudo ./linux-install-1.11.1.1165.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install build-essential zlib1g-dev
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-aarch64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.3.0
          key: linux-aarch64-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  linux-static:
    docker:
      - image: circleci/clojure:openjdk-11-lein-2.9.8-bullseye
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
      GRAALVM_HOME: /home/circleci/graalvm-ce-java11-22.3.0
      CLJ_KONDO_PLATFORM: linux-static # used in release script
      CLJ_KONDO_TEST_ENV: native
      CLJ_KONDO_STATIC: true
      CLJ_KONDO_MUSL: true
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      # - run:
      #     name: "Short circuit on SNAPSHOT"
      #     command: |
      #       VERSION=$(cat resources/CLJ_KONDO_VERSION)
      #       if [[ "$VERSION" == *-SNAPSHOT ]]
      #       then
      #         circleci task halt
      #       fi
      - restore_cache:
          keys:
            - linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Clojure
          command: |
            wget https://download.clojure.org/install/linux-install-1.10.2.796.sh
            chmod +x linux-install-1.10.2.796.sh
            sudo ./linux-install-1.10.2.796.sh
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install native dev tools
          command: |
            sudo apt-get update
            sudo apt-get -y install build-essential zlib1g-dev
            sudo -E script/setup-musl
      - run:
          name: Download GraalVM
          command: |
            cd ~
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-linux-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - persist_to_workspace:
          root: /tmp
          paths:
            - release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.3.0
          key: linux-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  mac:
    macos:
      xcode: "13.4.1"
    environment:
      GRAALVM_HOME: /Users/distiller/graalvm-ce-java11-22.3.0/Contents/Home
      CLJ_KONDO_PLATFORM: macos # used in release script
      CLJ_KONDO_TEST_ENV: native
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - run:
          name: Short circuit on non-master branches
          command: |
            if [ -z "$CIRCLE_PULL_REQUEST" ] && [ "$CIRCLE_BRANCH" = "master" ]
              then
                exit 0
              else
               circleci task halt
            fi
      - restore_cache:
          keys:
            - mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - run:
          name: Install Rosetta
          command: |
            sudo /usr/sbin/softwareupdate --install-rosetta --agree-to-license
      - run:
          name: Install Clojure
          command: |
            .circleci/script/install-clojure /usr/local
      - run:
          name: Install bb
          command: |
            sudo bash < <(curl -s https://raw.githubusercontent.com/babashka/babashka/master/install)
      - run:
          name: Install Leiningen
          command: |
            .circleci/script/install-leiningen

      - run:
          name: Download GraalVM
          command: |
            cd ~
            ls -la
            if ! [ -d graalvm-ce-java11-22.3.0 ]; then
              curl -O -sL https://github.com/graalvm/graalvm-ce-builds/releases/download/vm-22.3.0/graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
              tar xzf graalvm-ce-java11-darwin-amd64-22.3.0.tar.gz
            fi
      - run:
          name: Build binary
          command: |
            script/compile
          no_output_timeout: 30m
      - run:
          name: Run tests
          command: |
            script/test
      - run:
          name: Performance report
          command: |
            .circleci/script/performance
      - run:
          name: Release
          command: |
            .circleci/script/release
      - save_cache:
          paths:
            - ~/.m2
            - ~/graalvm-ce-java11-22.3.0
          key: mac-{{ checksum "deps.edn" }}-{{ checksum ".circleci/config.yml" }}
      - store_artifacts:
          path: /tmp/release
          destination: release
  deploy:
    docker:
      - image: cimg/clojure@sha256:8298383d7753a2305663403871c31f238c3c5f0200e13f2394e32d4598a9fdf2
    working_directory: ~/repo
    environment:
      LEIN_ROOT: "true"
    steps:
      - checkout
      - run:
          name: Get rid of erroneous git config
          command: |
              rm -rf /home/circleci/.gitconfig
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "deps.edn" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-
      - run: .circleci/script/deploy
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "deps.edn" }}
  docker:
    machine:
      image: ubuntu-2204:2024.04.4
    steps:
    - checkout
    - run:
        name: Pull Submodules
        command: |-
          git submodule init
          git submodule update
    - run:
        name: Install bb
        command: |-
          curl -sLO https://raw.githubusercontent.com/babashka/babashka/master/install
          chmod +x install
          ./install --dir .
    - setup-docker-buildx
    - attach_workspace:
        at: /tmp
    - run:
        name: Build Docker image
        environment:
          PLATFORMS: linux/amd64,linux/arm64
        command: ./bb .circleci/script/docker.clj

workflows:
  version: 2
  ci:
    jobs:
      - jvm
      - linux
      - linux-aarch64
      - linux-static
      - mac
      - deploy:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - linux
      - docker:
          filters:
            branches:
              only: master
          requires:
            - jvm
            - linux
            - linux-static
            - linux-aarch64
