#!/usr/bin/env bash

set -eo pipefail

image_name="cljkondo/clj-kondo"
ghcr_image_name="ghcr.io/clj-kondo/clj-kondo"
image_tag=$(cat resources/CLJ_KONDO_VERSION)
latest_tag="latest"

if [[ $image_tag =~ SNAPSHOT$ ]]; then
    echo "This is a snapshot version"
    snapshot="true"
else
    echo "This is a non-snapshot version"
    snapshot="false"
fi

if [ -z "$CIRCLE_PULL_REQUEST" ] && [ "$CIRCLE_BRANCH" = "master" ]; then
    push="--push"
    action="Building and publishing"
    echo "Publishing Docker image"
else
    push=""
    action="Building"
    echo "Not publishing Docker image"
fi

docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
docker context create buildcontext
docker buildx create buildcontext --use

echo "Building Docker image $image_name:$image_tag"
if [ "$push" != "" ]; then
    echo "Logging into Docker Hub and GitHub Container Registry"
    echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USER" --password-stdin
    echo "$GHCR_TOKEN" | docker login ghcr.io -u "$CONTAINER_REGISTRY_USER" --password-stdin
fi

unzip "/tmp/release/clj-kondo-${image_tag}-linux-amd64.zip" && mv clj-kondo clj-kondo-amd64
unzip "/tmp/release/clj-kondo-${image_tag}-linux-aarch64.zip" && mv clj-kondo clj-kondo-arm64

if [[ $snapshot == "false" ]]; then
    echo "$action image $image_name:latest $image_name:$latest_tag $ghcr_image_name:latest $ghcr_image_name:$latest_tag"
    docker buildx build --platform linux/amd64,linux/arm64/v8 \
        -t "$image_name:$image_tag" \
        -t "$ghcr_image_name:$image_tag" \
        "$push" \
        -f Dockerfile.ci .
    rm -f clj-kondo-linux-amd64 clj-kondo-linux-aarch64

    # only push alpine when non-snapshot
    unzip "/tmp/release/clj-kondo-${image_tag}-linux-static-amd64.zip" && mv clj-kondo clj-kondo-amd64
    unzip "/tmp/release/clj-kondo-${image_tag}-linux-static-aarch64.zip" && mv clj-kondo clj-kondo-arm64
    echo "$action image $image_name:alpine $image_name:$image_tag-alpine $ghcr_image_name:alpine $ghcr_image_name:$image_tag-alpine"
    docker buildx build --platform linux/amd64,linux/arm64/v8 \
        -t "$image_name:alpine" \
        -t "$image_name:$image_tag-alpine" \
        -t "$ghcr_image_name:alpine" \
        -t "$ghcr_image_name:$image_tag-alpine" \
        "$push" \
        -f Dockerfile.alpine .
else
    # only update latest when it's not a SNAPSHOT version
    echo "$action image $image_name:$latest_tag $ghcr_image_name:$latest_tag"
    docker buildx build --platform linux/amd64,linux/arm64/v8 \
        -t "$image_name:latest" \
        -t "$image_name:$image_tag" \
        -t "$ghcr_image_name:latest" \
        -t "$ghcr_image_name:$image_tag" \
        "$push" \
        -f Dockerfile.ci .
fi

exit 0
